read.csv("./datasets/Cassady.csv")
data <- read.csv("./datasets/Cassady.csv")
Cassidy <- read.csv("./datasets/Cassady.csv")
model1.1 <- lm(GPA ~ CTA.tot + BStotal, Cassidy)
model1.1
plot(cars)
lme()
'''
'''
'''
'''
"
"
"
Simple Multilevel Models with nlme
Intercept Only
"
model3.0 <- lme (fixed, geread~1, random = ~1 | schoolm data = Achieve)
"
Simple Multilevel Models with nlme
Intercept Only
"
model3.0 <- lme (fixed, geread~1, random = ~1 | school, data = Achieve)
"
Simple Multilevel Models with nlme
Intercept Only
"
Achieve = read_csv('Datasets/Achieve.csv')
model3.0 <- lme (fixed, geread~1, random = ~1 | school, data = Achieve)
"
Simple Multilevel Models with nlme
Intercept Only
"
Achieve <- read_csv('Datasets/Achieve.csv')
model3.0 <- lme (fixed, geread~1, random = ~1 | school, data = Achieve)
"
Simple Multilevel Models with nlme
Intercept Only
"
library(nlme)
Achieve <- read_csv('Datasets/Achieve.csv')
model3.0 <- lme (fixed, geread~1, random = ~1 | school, data = Achieve)
"
Simple Multilevel Models with nlme
Intercept Only
"
library(nlme)
Achieve <- read_csv('Datasets/Achieve.csv')
model3.0 <- lme (fixed= geread~1, random = ~1 | school, data = Achieve)
"
Simple Multilevel Models with nlme
Intercept Only
"
library(nlme)
Achieve <- read.table('./Datasets/Achieve.csv', header=False)
model3.0 <- lme (fixed= geread~1, random = ~1 | school, data = Achieve)
library(nlme)
Achieve <- read.table('./Datasets/Achieve.csv', header=False)
Achieve <- read.table('./Datasets/Achieve.csv', header=FALSE)
library(nlme)
"
Simple Multilevel Models with nlme
Intercept Only
"
library(nlme)
Achieve <- read.table('./Datasets/Achieve.csv', header=FALSE)
model3.0 <- lme (fixed= geread~1, random = ~1 | school, data = Achieve)
"
Simple Multilevel Models with nlme
Intercept Only
"
library(nlme)
Achieve <- read.table('./Datasets/Achieve.csv', header=FALSE)
model3.0 <- lme (fixed= geread~1, random = ~1| school, data = Achieve)
"
Simple Multilevel Models with nlme
Intercept Only
"
library(nlme)
Achieve <- read.table('./Datasets/Achieve.csv', header=TRUE)
model3.0 <- lme (fixed= geread~1, random = ~1| school, data = Achieve)
"
Simple Multilevel Models with nlme
Intercept Only
"
library(nlme)
Achieve <- read.table('./Datasets/Achieve.csv', header=TRUE)
model3.0 <- lme (fixed= geread~1, random = ~1| school, data = Achieve)
"
Simple Multilevel Models with nlme
Intercept Only
"
library(nlme)
Achieve <- read.table('./Datasets/Achieve.csv', header=TRUE)
model3.0 <- lme (fixed= geread , random = ~1| school, data = Achieve)
View(Achieve)
View(Achieve)
"
Simple Multilevel Models with nlme
Intercept Only
"
library(nlme)
Achieve <- read.table('./Datasets/Achieve.csv', header=TRUE, sep=',')
model3.0 <- lme (fixed= geread~1 , random = ~1| school, data = Achieve)
summary(model3.0)
"
Simple Multilevel Models with nlme
Intercept Only
"
library(nlme)
Achieve <- read.table('./Datasets/Achieve.csv', header=TRUE, sep=',')
model3.0 <- lme (fixed= geread~1 , random = ~1| school, data = Achieve)
summary(model3.0)
" Adding independent variable"
model3.1 <- lme(fixed= geread~gevocab , random = ~1| school, data = Achieve)
summary(model3.1)
View(Achieve)
model3.1.aic
summary(model3.1).aic
model3.1
model3.2 <- lme(fixed = gread~gevocab + senroll, random = ~1|school, data = Achieve)
model3.2 <- lme(fixed = geread~gevocab + senroll, random = ~1|school, data = Achieve)
summray(model3.2)
summary(model3.2)
model3.2$aic
model3.2$AIC
model3.2$data
model3.2$data$school
model3.3 <- lme(fixed = geread~gevocab, random = ~gevocab|school, data = Achieve)
summary(model3.3)
summary(model3.3)
library(EPSY905R)
#LOAD INTERNAL R DATA SET
data("dataSexHeightWeight")
#ASSIGN A DIFFERENT NAME FOR THE DATA SET TO MAKE CHANGES
data01 = dataSexHeightWeight
#CREATE NEW VARIABLE WHERE FEMALE=1 (DUMMY CODED)
data01$female[data01$sex=="F"]=1
data01$female[data01$sex=="M"]=0
#SCATTER PLOT MATRIX:
pairs(~female+heightIN+weightLB,data=data01)
#HISTOGRAM OF DATA FOR EACH QUANTITATIVE VARIABLE:
par(mfrow=c(1,2)) #SET PLOT TO SHOW TWO PICTURES IN ONE ROW
#LOAD INTERNAL R DATA SET
data("dataSexHeightWeight")
clear
c
library(EPSY905R)
#LOAD INTERNAL R DATA SET
data("dataSexHeightWeight")
"
General Linear Model
"
View(data01)
model1 <- lm(weightLB~1, data=data01)
summray(model1)
summary(model1)
model2 <- lm(weightLB~heightIN, data=data01)
summary(model1)
model2 <- lm(weightLB~heightIN, data=data01)
summary(model1)
summary(model2)
anova(model2)
anova(model1, model2)
"centering"
data01$heightIN_MC = data01$heightIN - mean(data01$heightIN)
mode02a <- lm(weightLB~heightIN_MC, data=data01)
summary(model02a)
summary(mode02a)
"centering, makes a good amount of difference when
interactions are used"
'
wald test
'
"Wald test t"
library(EPSY905R)
#LOAD INTERNAL R DATA SET
data("dataSexHeightWeight")
#ASSIGN A DIFFERENT NAME FOR THE DATA SET TO MAKE CHANGES
data01 = dataSexHeightWeight
#CREATE NEW VARIABLE WHERE FEMALE=1 (DUMMY CODED)
data01$female[data01$sex=="F"]=1
data01$female[data01$sex=="M"]=0
#Model #1: Empty model
model01 = lm(weightLB~1,data=data01)
summary(model01)
anova(model01)
#Model #2: Adding Height
model02 = lm(weightLB~heightIN,data=data01)
summary(model02)
anova(model02)
#model comparison with model #1:
anova(model01,model02)
#center height at mean height
data01$heightIN_MC = data01$heightIN - mean(data01$heightIN)
#model #2a: Adding mean-centered height
model02a = lm(weightLB~heightIN_MC,data=data01)
#model #2a: Adding mean-centered height
model02a = lm(weightLB~heightIN_MC,data=data01)
#model #2a: Adding mean-centered height
model02a = lm(weightLB~heightIN_MC,data=data01)
#model #2a: Adding mean-centered height
model02a = lm(weightLB~heightIN_MC,data=data01)
summary(model02a)
anova(model02a)
#model comparison with model #1:
anova(model01,model02a)
#model comparison with model #2:
anova(model02,model02a)
#model #3: adding female to empty model:
model03 = lm(weightLB~female,data=data01)
summary(model03)
anova(model03)
#model comparison with model #1:
anova(model01,model03)
#model #4: adding both MCheight and female to empty model
model04 = lm(weightLB~heightIN_MC+female,data=data01)
summary(model04)
summary(model03)
anova(model03)
#model comparison with model #1:
anova(model01,model03)
#model #4: adding both MCheight and female to empty model
model04 = lm(weightLB~heightIN_MC+female,data=data01)
summary(model04)
anova(model04)
#model comparison with model #2:
anova(model02a,model04)
#model comparison with model #3:
anova(model03,model04)
#model comparison with model #1:
anova(model01,model04)
#model #5: adding interaction to model #4:
model05 = lm(weightLB~heightIN_MC+female+female*heightIN_MC,data=data01)
summary(model05)
